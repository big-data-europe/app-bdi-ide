version: "2"
services:
  csswrapper:
    image: bde2020/nginx-proxy-with-css:latest
    ports:
      - 80:80
    volumes:
      -  /var/run/docker.sock:/tmp/docker.sock:ro

  integrator-ui:
    build: ./integrator-ui
    links:
      - csswrapper
    environment:
      VIRTUAL_HOST: "integrator-ui.big-data-europe.aksw.org"

  stack-builder:
    image: bde2020/ember-stack-builder-frontend:0.2.5
    links:
      - csswrapper
      - identifier:backend
    expose:
      - "80"
    environment:
      VIRTUAL_HOST: "stack-builder.big-data-europe.aksw.org"
      VIRTUAL_PORT: "80"

  pipeline-builder:
    image: bde2020/pipeline-builder-frontend:0.4.2
    links:
      - csswrapper
      - identifier:backend
    expose:
      - "80"
    environment:
      VIRTUAL_HOST: "workflow-builder.big-data-europe.aksw.org"
      VIRTUAL_PORT: "80"

  swarm-ui:
    image: bde2020/ember-swarm-ui-frontend:0.4.3
    links:
      - csswrapper
      - identifier:backend
    expose:
      - "80"
    environment:
      VIRTUAL_HOST: "swarm-ui.big-data-europe.aksw.org"
      VIRTUAL_PORT: "80"

  identifier:
    image: semtech/mu-identifier:1.2.0
    links:
      - dispatcher:dispatcher
      - swarm:swarm-admin

  dispatcher:
    image: semtech/mu-dispatcher:1.1.0
    links:
      - resource:resource
    volumes:
      - ./config/dispatcher:/config

  database:
    image: tenforce/virtuoso:1.1.0-virtuoso7.2.4
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./data/db:/data
      - ./config/toLoad:/data/toLoad

  resource:
    image: semtech/mu-cl-resources:1.11.0
    links:
      - database:database
    volumes:
      - ./config/resources:/config

  backend:
    image: bde2020/mu-docker-compose-file-service:0.1.0

  migrationsservice:
      image: semtech/mu-migrations-service
      volumes:
        - ./config/migrations:/data/migrations

  pipeline:
    image: bde2020/mu-pipeline-service:0.1.0

  export:
    image: bde2020/mu-pipeline-export-service:0.1.0

  swarm:
    image: bde2020/mu-swarm-admin-service:0.2.0
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - ENV=dev
    links:
      - database:database
      - docker:docker
    volumes:
      - /run/:/run/
      - /data/:/data/

  swarm-logger:
    image: bde2020/mu-swarm-logger-service
    links:
      - database:database
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: /src/run.py --debug sparql

  docker:
    image: docker:dind
    privileged: true
    volumes:
      - ./data/docker:/var/lib/docker

  event-query:
    image: bde2020/mu-event-query-service
    links:
      - database:database
    volumes:
      - ./containers:/usr/src/app/containers/
    environment:
      SLEEP_PERIOD: '10'

  docker-watcher:
    image: bde2020/mu-docker-watcher-service
    volumes:
      - ./config/supervisord/supervisord.conf:/etc/supervisord.conf
      - ./containers:/app/containers
      - ./pcap:/app/pcap/
    network_mode: host
    environment:
      PCAP_READ_DIR: '/pcap'

  har-transformation:
    image: bde2020/mu-har-transformation-service
    volumes:
      - ./pcap:/app/pcap
      - ./har:/app/har
      - ./containers:/app/containers
      - ./backups:/app/backups
    links:
      - elasticsearch:elasticsearch
    environment:
      BU_DIR: "/app/backups"

  elasticsearch:
    image: elasticsearch:5.5.0
    command: elasticsearch -E network.host=0.0.0.0
    ports:
      - "9200:9200"
  kibana:
    image: kibana:5.5
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      VIRTUAL_HOST: "kibana.big-data-europe.aksw.org"
      VIRTUAL_PORT: "5601"
    links:
      - elasticsearch:elasticsearch
